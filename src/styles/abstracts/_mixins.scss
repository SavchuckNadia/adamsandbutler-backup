@mixin flex($d, $js, $ai) {
    display: flex;
    flex-direction: $d;
    justify-content: $js;
    align-items: $ai;
}


@mixin center-element {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin push--auto {
    margin: {
        left: auto;
        right: auto;
    }
}

@mixin font-size($size) {
    font-size: $size;
    font-size: ($size / 16px) * 1rem;
}


@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
    $padding: unquote(($y / $x ) * 100 + '%');

    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    }

    @else {
        padding-top: $padding;
    }
}

@mixin input-placeholder {
    &.placeholder {
        @content;
    }

    &:-moz-placeholder {
        @content;
    }

    &::-moz-placeholder {
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }

    &::-webkit-input-placeholder {
        @content;
    }
}


$breakpoints: (
    "phone": 400px,
    "phone-wide": 480px,
    "phablet": 560px,
    "tablet-small": 640px,
    "tablet": 768px,
    "tablet-wide": 1024px,
    "desktop": 1248px,
    "desktop-wide": 1440px
);

@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);

        @if $type ==max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}




@mixin media-query($break-point) {
    @if $break-point==lg {
        @media (max-width: 1250px) {
            @content
        }
    }

    @if $break-point==md {
        @media (max-width: 900px) {
            @content
        }
    }

    @if $break-point==sm {
        @media (max-width: 600px) {
            @content
        }
    }

}